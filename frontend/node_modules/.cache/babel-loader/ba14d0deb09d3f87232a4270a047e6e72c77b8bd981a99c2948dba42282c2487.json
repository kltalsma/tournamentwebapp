{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport apiClient from './apiClient';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState({\n    numTeams: 48,\n    numPoules: 8,\n    numCourts: 12,\n    matchTime: 15,\n    // in minutes\n    startTime: \"0900\",\n    // Starting at 09:00\n    teamNames: Array.from({\n      length: 48\n    }, (_, i) => `Team ${i + 1}`)\n  });\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState([]);\n\n  // Helper to distribute teams into poules\n  const generateTeamPoules = (numTeams, numPoules) => {\n    const teamPoules = {};\n    config.teamNames.forEach((team, index) => {\n      teamPoules[team] = index % numPoules + 1; // evenly distribute teams into poules\n    });\n    return teamPoules;\n  };\n\n  // Schedule generator\n  const generatePouleSchedule = () => {\n    const teamPoules = generateTeamPoules(config.numTeams, config.numPoules);\n    const poules = Array.from({\n      length: config.numPoules\n    }, () => []);\n\n    // Distribute teams into poules based on teamPoules mapping\n    config.teamNames.forEach(team => {\n      const pouleIndex = teamPoules[team] - 1;\n      poules[pouleIndex].push(team);\n    });\n\n    // Helper function to add minutes to a time string (HHMM format)\n    const addMinutes = (time, minutes) => {\n      const hours = parseInt(time.slice(0, 2), 10);\n      const mins = parseInt(time.slice(2), 10) + minutes;\n      const newHours = hours + Math.floor(mins / 60);\n      const newMins = mins % 60;\n      return `${String(newHours).padStart(2, '0')}:${String(newMins).padStart(2, '0')}`;\n    };\n\n    // Generate the schedule\n    let currentTime = config.startTime;\n    const schedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          schedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: schedule.length % config.numCourts + 1\n          });\n          currentTime = addMinutes(currentTime.replace(':', ''), config.matchTime);\n        }\n      }\n    });\n    setSchedule(schedule);\n    return schedule;\n  };\n\n  // Calculate standings based on results\n  const calculateStandings = results => {\n    const teamPoules = generateTeamPoules(config.numTeams, config.numPoules);\n    const standings = {};\n    results.forEach(({\n      teams,\n      score1,\n      score2\n    }) => {\n      const [team1, team2] = teams.split(' vs ');\n      const poule1 = teamPoules[team1];\n      const poule2 = teamPoules[team2];\n      if (poule1 === undefined || poule2 === undefined) {\n        console.error(`Poule data missing for ${team1} or ${team2}`);\n        return;\n      }\n      if (!standings[team1]) standings[team1] = {\n        name: team1,\n        played: 0,\n        won: 0,\n        points: 0,\n        poule: poule1\n      };\n      if (!standings[team2]) standings[team2] = {\n        name: team2,\n        played: 0,\n        won: 0,\n        points: 0,\n        poule: poule2\n      };\n      standings[team1].played += 1;\n      standings[team2].played += 1;\n      if (score1 > score2) {\n        standings[team1].won += 1;\n        standings[team1].points += 3;\n      } else if (score2 > score1) {\n        standings[team2].won += 1;\n        standings[team2].points += 3;\n      } else {\n        standings[team1].points += 1;\n        standings[team2].points += 1;\n      }\n    });\n    setStandings(Object.values(standings).sort((a, b) => b.points - a.points || b.won - a.won));\n  };\n  const handleSaveResults = newResults => {\n    setResults(newResults);\n    calculateStandings(newResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePouleSchedule,\n      children: \"Generate Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n      schedule: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      matches: schedule,\n      onSaveResults: handleSaveResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n      standings: standings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pT8HkwXya7Xgl4ZNaAhhK3TxRFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","apiClient","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","jsxDEV","_jsxDEV","App","_s","config","setConfig","numTeams","numPoules","numCourts","matchTime","startTime","teamNames","Array","from","length","_","i","schedule","setSchedule","results","setResults","standings","setStandings","generateTeamPoules","teamPoules","forEach","team","index","generatePouleSchedule","poules","pouleIndex","push","addMinutes","time","minutes","hours","parseInt","slice","mins","newHours","Math","floor","newMins","String","padStart","currentTime","poule","j","teams","court","replace","calculateStandings","score1","score2","team1","team2","split","poule1","poule2","undefined","console","error","name","played","won","points","Object","values","sort","a","b","handleSaveResults","newResults","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","matches","onSaveResults","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport apiClient from './apiClient';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\n\nconst App = () => {\n  const [config, setConfig] = useState({\n    numTeams: 48,\n    numPoules: 8,\n    numCourts: 12,\n    matchTime: 15, // in minutes\n    startTime: \"0900\", // Starting at 09:00\n    teamNames: Array.from({ length: 48 }, (_, i) => `Team ${i + 1}`),\n  });\n\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState([]);\n\n  // Helper to distribute teams into poules\n  const generateTeamPoules = (numTeams, numPoules) => {\n    const teamPoules = {};\n    config.teamNames.forEach((team, index) => {\n      teamPoules[team] = (index % numPoules) + 1; // evenly distribute teams into poules\n    });\n    return teamPoules;\n  };\n\n  // Schedule generator\n  const generatePouleSchedule = () => {\n    const teamPoules = generateTeamPoules(config.numTeams, config.numPoules);\n    const poules = Array.from({ length: config.numPoules }, () => []);\n\n    // Distribute teams into poules based on teamPoules mapping\n    config.teamNames.forEach((team) => {\n      const pouleIndex = teamPoules[team] - 1;\n      poules[pouleIndex].push(team);\n    });\n\n    // Helper function to add minutes to a time string (HHMM format)\n    const addMinutes = (time, minutes) => {\n      const hours = parseInt(time.slice(0, 2), 10);\n      const mins = parseInt(time.slice(2), 10) + minutes;\n      const newHours = hours + Math.floor(mins / 60);\n      const newMins = mins % 60;\n      return `${String(newHours).padStart(2, '0')}:${String(newMins).padStart(2, '0')}`;\n    };\n\n    // Generate the schedule\n    let currentTime = config.startTime;\n    const schedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          schedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: (schedule.length % config.numCourts) + 1,\n          });\n          currentTime = addMinutes(currentTime.replace(':', ''), config.matchTime);\n        }\n      }\n    });\n    setSchedule(schedule);\n    return schedule;\n  };\n\n  // Calculate standings based on results\n  const calculateStandings = (results) => {\n    const teamPoules = generateTeamPoules(config.numTeams, config.numPoules);\n    const standings = {};\n\n    results.forEach(({ teams, score1, score2 }) => {\n      const [team1, team2] = teams.split(' vs ');\n      const poule1 = teamPoules[team1];\n      const poule2 = teamPoules[team2];\n\n      if (poule1 === undefined || poule2 === undefined) {\n        console.error(`Poule data missing for ${team1} or ${team2}`);\n        return;\n      }\n\n      if (!standings[team1]) standings[team1] = { name: team1, played: 0, won: 0, points: 0, poule: poule1 };\n      if (!standings[team2]) standings[team2] = { name: team2, played: 0, won: 0, points: 0, poule: poule2 };\n\n      standings[team1].played += 1;\n      standings[team2].played += 1;\n\n      if (score1 > score2) {\n        standings[team1].won += 1;\n        standings[team1].points += 3;\n      } else if (score2 > score1) {\n        standings[team2].won += 1;\n        standings[team2].points += 3;\n      } else {\n        standings[team1].points += 1;\n        standings[team2].points += 1;\n      }\n    });\n\n    setStandings(Object.values(standings).sort((a, b) => b.points - a.points || b.won - a.won));\n  };\n\n  const handleSaveResults = (newResults) => {\n    setResults(newResults);\n    calculateStandings(newResults);\n  };\n\n  return (\n    <div>\n      <h1>Volleyball Tournament Configuration</h1>\n      <button onClick={generatePouleSchedule}>Generate Schedule</button>\n      <PouleSchedule schedule={schedule} />\n      <MatchResults matches={schedule} onSaveResults={handleSaveResults} />\n      <LiveStandings standings={standings} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}