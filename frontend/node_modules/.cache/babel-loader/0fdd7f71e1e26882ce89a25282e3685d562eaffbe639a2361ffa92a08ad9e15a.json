{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport KnockoutRounds from './components/KnockoutRounds';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState({});\n  const [knockoutStage, setKnockoutStage] = useState(false);\n  const [knockoutTeams, setKnockoutTeams] = useState([]);\n  const handleConfigSubmit = newConfig => {\n    setConfig(newConfig);\n    setKnockoutStage(false);\n    setSchedule([]);\n    setResults([]);\n    setStandings({});\n  };\n  const generatePouleSchedule = () => {\n    const {\n      teamNames,\n      numPoules,\n      numCourts,\n      matchTime,\n      startTime\n    } = config;\n    const poules = Array.from({\n      length: numPoules\n    }, () => []);\n\n    // Distribute teams into poules\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    // Helper function to add minutes to time\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n\n    // Generate schedule with referees and courts\n    let currentTime = startTime;\n    const generatedSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          const nonPlayingTeams = teamNames.filter(team => team !== poule[i] && team !== poule[j]);\n          const referee = nonPlayingTeams[generatedSchedule.length % nonPlayingTeams.length];\n          generatedSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: generatedSchedule.length % numCourts + 1,\n            referee,\n            score1: 0,\n            score2: 0\n          });\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(generatedSchedule);\n  };\n  const handleSaveResults = newResults => {\n    if (!Array.isArray(newResults)) {\n      console.error(\"Expected newResults to be an array, but got:\", typeof newResults);\n      return;\n    }\n    const completeResults = newResults.filter(result => result.teams && result.score1 !== undefined && result.score2 !== undefined);\n    if (completeResults.length > 0) {\n      updateStandings(completeResults);\n      setResults(completeResults);\n    } else {\n      console.warn(\"No complete match results to save.\");\n    }\n  };\n  const updateStandings = newResults => {\n    // Create a deep copy of standings to avoid direct state mutations\n    const updatedStandings = JSON.parse(JSON.stringify(standings));\n    newResults.forEach(result => {\n      const {\n        teams,\n        score1,\n        score2,\n        poule\n      } = result;\n      if (!teams || typeof teams !== \"string\") {\n        console.warn(\"Skipping undefined or invalid teams in result:\", result);\n        return;\n      }\n      const [team1, team2] = teams.split(' vs ');\n      const team1Score = parseInt(score1, 10) || 0;\n      const team2Score = parseInt(score2, 10) || 0;\n\n      // Ensure that each poule has an independent standings structure\n      if (!updatedStandings[poule]) {\n        updatedStandings[poule] = {};\n      }\n\n      // Initialize standings for teams in the specific poule if they don't exist\n      if (!updatedStandings[poule][team1]) {\n        updatedStandings[poule][team1] = {\n          name: team1,\n          played: 0,\n          won: 0,\n          points: 0,\n          scored: 0,\n          against: 0\n        };\n      }\n      if (!updatedStandings[poule][team2]) {\n        updatedStandings[poule][team2] = {\n          name: team2,\n          played: 0,\n          won: 0,\n          points: 0,\n          scored: 0,\n          against: 0\n        };\n      }\n\n      // Update statistics for each team in the correct poule\n      updatedStandings[poule][team1].played += 1;\n      updatedStandings[poule][team2].played += 1;\n      updatedStandings[poule][team1].scored += team1Score;\n      updatedStandings[poule][team1].against += team2Score;\n      updatedStandings[poule][team2].scored += team2Score;\n      updatedStandings[poule][team2].against += team1Score;\n\n      // Assign points based on match outcome\n      if (team1Score > team2Score) {\n        updatedStandings[poule][team1].won += 1;\n        updatedStandings[poule][team1].points += 3;\n      } else if (team2Score > team1Score) {\n        updatedStandings[poule][team2].won += 1;\n        updatedStandings[poule][team2].points += 3;\n      } else {\n        updatedStandings[poule][team1].points += 1;\n        updatedStandings[poule][team2].points += 1;\n      }\n    });\n    setStandings(updatedStandings);\n    console.log(\"Updated standings:\", updatedStandings);\n  };\n  const determineKnockoutTeams = () => {\n    const knockoutCandidates = [];\n    Object.keys(standings).forEach(poule => {\n      const sortedTeams = Object.values(standings[poule]).sort((a, b) => b.points - a.points || b.scored - b.against - (a.scored - a.against));\n      const topTeams = sortedTeams.slice(0, 4);\n      knockoutCandidates.push(...topTeams);\n    });\n    if (knockoutCandidates.length > 0) {\n      setKnockoutTeams(knockoutCandidates);\n      setKnockoutStage(true);\n    } else {\n      console.warn(\"Not enough teams to proceed with knockout rounds.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), !config ? /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleConfigSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePouleSchedule,\n        children: \"Generate Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n        schedule: schedule\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n        matches: schedule,\n        onSaveResults: handleSaveResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n        standings: standings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: determineKnockoutTeams,\n        children: \"Save Results & Start Knockout Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), knockoutStage && /*#__PURE__*/_jsxDEV(KnockoutRounds, {\n        teams: knockoutTeams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0SQEgTpAgJrdn24ozBPiAeZGJPg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","KnockoutRounds","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","config","setConfig","schedule","setSchedule","results","setResults","standings","setStandings","knockoutStage","setKnockoutStage","knockoutTeams","setKnockoutTeams","handleConfigSubmit","newConfig","generatePouleSchedule","teamNames","numPoules","numCourts","matchTime","startTime","poules","Array","from","length","forEach","team","index","pouleIndex","push","addMinutes","time","minutes","hour","min","split","map","Number","newMinutes","newHour","Math","floor","newMin","String","padStart","currentTime","generatedSchedule","poule","i","j","nonPlayingTeams","filter","referee","teams","court","score1","score2","handleSaveResults","newResults","isArray","console","error","completeResults","result","undefined","updateStandings","warn","updatedStandings","JSON","parse","stringify","team1","team2","team1Score","parseInt","team2Score","name","played","won","points","scored","against","log","determineKnockoutTeams","knockoutCandidates","Object","keys","sortedTeams","values","sort","a","b","topTeams","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","matches","onSaveResults","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport KnockoutRounds from './components/KnockoutRounds';\nimport './styles/index.css';\n\nconst App = () => {\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState({});\n  const [knockoutStage, setKnockoutStage] = useState(false);\n  const [knockoutTeams, setKnockoutTeams] = useState([]);\n\n  const handleConfigSubmit = (newConfig) => {\n    setConfig(newConfig);\n    setKnockoutStage(false);\n    setSchedule([]);\n    setResults([]);\n    setStandings({});\n  };\n\n  const generatePouleSchedule = () => {\n    const { teamNames, numPoules, numCourts, matchTime, startTime } = config;\n    const poules = Array.from({ length: numPoules }, () => []);\n\n    // Distribute teams into poules\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    // Helper function to add minutes to time\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n\n    // Generate schedule with referees and courts\n    let currentTime = startTime;\n    const generatedSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          const nonPlayingTeams = teamNames.filter(\n            (team) => team !== poule[i] && team !== poule[j]\n          );\n          const referee = nonPlayingTeams[(generatedSchedule.length) % nonPlayingTeams.length];\n\n          generatedSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: (generatedSchedule.length % numCourts) + 1,\n            referee,\n            score1: 0,\n            score2: 0,\n          });\n\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(generatedSchedule);\n  };\n\n  const handleSaveResults = (newResults) => {\n    if (!Array.isArray(newResults)) {\n      console.error(\"Expected newResults to be an array, but got:\", typeof newResults);\n      return;\n    }\n\n    const completeResults = newResults.filter(\n      (result) => result.teams && result.score1 !== undefined && result.score2 !== undefined\n    );\n\n    if (completeResults.length > 0) {\n      updateStandings(completeResults);\n      setResults(completeResults);\n    } else {\n      console.warn(\"No complete match results to save.\");\n    }\n  };\n\nconst updateStandings = (newResults) => {\n  // Create a deep copy of standings to avoid direct state mutations\n  const updatedStandings = JSON.parse(JSON.stringify(standings));\n\n  newResults.forEach((result) => {\n    const { teams, score1, score2, poule } = result;\n\n    if (!teams || typeof teams !== \"string\") {\n      console.warn(\"Skipping undefined or invalid teams in result:\", result);\n      return;\n    }\n\n    const [team1, team2] = teams.split(' vs ');\n    const team1Score = parseInt(score1, 10) || 0;\n    const team2Score = parseInt(score2, 10) || 0;\n\n    // Ensure that each poule has an independent standings structure\n    if (!updatedStandings[poule]) {\n      updatedStandings[poule] = {};\n    }\n\n    // Initialize standings for teams in the specific poule if they don't exist\n    if (!updatedStandings[poule][team1]) {\n      updatedStandings[poule][team1] = { name: team1, played: 0, won: 0, points: 0, scored: 0, against: 0 };\n    }\n    if (!updatedStandings[poule][team2]) {\n      updatedStandings[poule][team2] = { name: team2, played: 0, won: 0, points: 0, scored: 0, against: 0 };\n    }\n\n    // Update statistics for each team in the correct poule\n    updatedStandings[poule][team1].played += 1;\n    updatedStandings[poule][team2].played += 1;\n    updatedStandings[poule][team1].scored += team1Score;\n    updatedStandings[poule][team1].against += team2Score;\n    updatedStandings[poule][team2].scored += team2Score;\n    updatedStandings[poule][team2].against += team1Score;\n\n    // Assign points based on match outcome\n    if (team1Score > team2Score) {\n      updatedStandings[poule][team1].won += 1;\n      updatedStandings[poule][team1].points += 3;\n    } else if (team2Score > team1Score) {\n      updatedStandings[poule][team2].won += 1;\n      updatedStandings[poule][team2].points += 3;\n    } else {\n      updatedStandings[poule][team1].points += 1;\n      updatedStandings[poule][team2].points += 1;\n    }\n  });\n\n  setStandings(updatedStandings);\n  console.log(\"Updated standings:\", updatedStandings);\n};\n\n\n  const determineKnockoutTeams = () => {\n    const knockoutCandidates = [];\n\n    Object.keys(standings).forEach(poule => {\n      const sortedTeams = Object.values(standings[poule])\n        .sort((a, b) => b.points - a.points || (b.scored - b.against) - (a.scored - a.against));\n\n      const topTeams = sortedTeams.slice(0, 4);\n      knockoutCandidates.push(...topTeams);\n    });\n\n    if (knockoutCandidates.length > 0) {\n      setKnockoutTeams(knockoutCandidates);\n      setKnockoutStage(true);\n    } else {\n      console.warn(\"Not enough teams to proceed with knockout rounds.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Volleyball Tournament Configuration</h1>\n      {!config ? (\n        <ConfigurationForm onSubmit={handleConfigSubmit} />\n      ) : (\n        <>\n          <button onClick={generatePouleSchedule}>Generate Schedule</button>\n          <PouleSchedule schedule={schedule} />\n          <MatchResults matches={schedule} onSaveResults={handleSaveResults} />\n          <LiveStandings standings={standings} />\n          <button onClick={determineKnockoutTeams}>Save Results & Start Knockout Rounds</button>\n          {knockoutStage && <KnockoutRounds teams={knockoutTeams} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}