{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [standings, setStandings] = useState([]);\n  const [teamNames, setTeamNames] = useState([]);\n  const handleConfigSubmit = newConfig => {\n    setConfig(newConfig);\n    setTeamNames(newConfig.teamNames);\n  };\n  const generatePouleSchedule = () => {\n    const poules = Array.from({\n      length: config.numPoules\n    }, () => []);\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % config.numPoules;\n      poules[pouleIndex].push(team);\n    });\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n    let currentTime = config.startTime;\n    const newSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          // Select a referee from teams not playing in this match\n          const nonPlayingTeams = teamNames.filter(team => team !== poule[i] && team !== poule[j]);\n          const referee = nonPlayingTeams[newSchedule.length % nonPlayingTeams.length];\n          newSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: newSchedule.length % config.numCourts + 1,\n            referee,\n            score1: \"\",\n            // Initialize score1 as an empty string\n            score2: \"\" // Initialize score2 as an empty string\n          });\n          currentTime = addMinutes(currentTime, config.matchTime);\n        }\n      }\n    });\n    setSchedule(newSchedule);\n  };\n  const handleSaveResults = (index, field, value) => {\n    const updatedSchedule = [...schedule];\n    updatedSchedule[index][field] = value;\n    setSchedule(updatedSchedule);\n    calculateStandings(updatedSchedule);\n  };\n  const calculateStandings = schedule => {\n    const standings = {};\n    schedule.forEach(({\n      teams,\n      score1,\n      score2\n    }) => {\n      if (score1 !== \"\" && score2 !== \"\") {\n        // Only count completed matches\n        const [team1, team2] = teams.split(' vs ');\n        if (!standings[team1]) standings[team1] = {\n          name: team1,\n          played: 0,\n          won: 0,\n          points: 0\n        };\n        if (!standings[team2]) standings[team2] = {\n          name: team2,\n          played: 0,\n          won: 0,\n          points: 0\n        };\n        standings[team1].played += 1;\n        standings[team2].played += 1;\n        if (parseInt(score1) > parseInt(score2)) {\n          standings[team1].won += 1;\n          standings[team1].points += 3;\n        } else if (parseInt(score2) > parseInt(score1)) {\n          standings[team2].won += 1;\n          standings[team2].points += 3;\n        } else {\n          standings[team1].points += 1;\n          standings[team2].points += 1;\n        }\n      }\n    });\n    setStandings(Object.values(standings));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), !config ? /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleConfigSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePouleSchedule,\n        children: \"Generate Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n        schedule: schedule\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n        schedule: schedule,\n        onSaveResults: handleSaveResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n        standings: standings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WSqOaAmCxBmL+ti63si87yLlAGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","config","setConfig","schedule","setSchedule","standings","setStandings","teamNames","setTeamNames","handleConfigSubmit","newConfig","generatePouleSchedule","poules","Array","from","length","numPoules","forEach","team","index","pouleIndex","push","addMinutes","time","minutes","hour","min","split","map","Number","newMinutes","newHour","Math","floor","newMin","String","padStart","currentTime","startTime","newSchedule","poule","i","j","nonPlayingTeams","filter","referee","teams","court","numCourts","score1","score2","matchTime","handleSaveResults","field","value","updatedSchedule","calculateStandings","team1","team2","name","played","won","points","parseInt","Object","values","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","onSaveResults","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\n\nconst App = () => {\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [standings, setStandings] = useState([]);\n  const [teamNames, setTeamNames] = useState([]);\n\n  const handleConfigSubmit = (newConfig) => {\n    setConfig(newConfig);\n    setTeamNames(newConfig.teamNames);\n  };\n\n  const generatePouleSchedule = () => {\n    const poules = Array.from({ length: config.numPoules }, () => []);\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % config.numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n\n    let currentTime = config.startTime;\n    const newSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          // Select a referee from teams not playing in this match\n          const nonPlayingTeams = teamNames.filter(team => team !== poule[i] && team !== poule[j]);\n          const referee = nonPlayingTeams[(newSchedule.length) % nonPlayingTeams.length];\n\n          newSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: (newSchedule.length % config.numCourts) + 1,\n            referee,\n            score1: \"\", // Initialize score1 as an empty string\n            score2: \"\"  // Initialize score2 as an empty string\n          });\n          currentTime = addMinutes(currentTime, config.matchTime);\n        }\n      }\n    });\n    setSchedule(newSchedule);\n  };\n\n  const handleSaveResults = (index, field, value) => {\n    const updatedSchedule = [...schedule];\n    updatedSchedule[index][field] = value;\n    setSchedule(updatedSchedule);\n    calculateStandings(updatedSchedule);\n  };\n\n  const calculateStandings = (schedule) => {\n    const standings = {};\n    schedule.forEach(({ teams, score1, score2 }) => {\n      if (score1 !== \"\" && score2 !== \"\") { // Only count completed matches\n        const [team1, team2] = teams.split(' vs ');\n        if (!standings[team1]) standings[team1] = { name: team1, played: 0, won: 0, points: 0 };\n        if (!standings[team2]) standings[team2] = { name: team2, played: 0, won: 0, points: 0 };\n        \n        standings[team1].played += 1;\n        standings[team2].played += 1;\n\n        if (parseInt(score1) > parseInt(score2)) {\n          standings[team1].won += 1;\n          standings[team1].points += 3;\n        } else if (parseInt(score2) > parseInt(score1)) {\n          standings[team2].won += 1;\n          standings[team2].points += 3;\n        } else {\n          standings[team1].points += 1;\n          standings[team2].points += 1;\n        }\n      }\n    });\n    setStandings(Object.values(standings));\n  };\n\n  return (\n    <div>\n      <h1>Volleyball Tournament Configuration</h1>\n      {!config ? (\n        <ConfigurationForm onSubmit={handleConfigSubmit} />\n      ) : (\n        <>\n          <button onClick={generatePouleSchedule}>Generate Schedule</button>\n          <PouleSchedule schedule={schedule} />\n          <MatchResults schedule={schedule} onSaveResults={handleSaveResults} />\n          <LiveStandings standings={standings} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}