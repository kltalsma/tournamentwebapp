{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport KnockoutRounds from './components/KnockoutRounds';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState({});\n  const [standings, setStandings] = useState({});\n  const [knockoutStage, setKnockoutStage] = useState(false);\n  const [knockoutTeams, setKnockoutTeams] = useState([]);\n  const handleConfigSubmit = newConfig => {\n    setConfig(newConfig);\n    setKnockoutStage(false);\n    setSchedule([]);\n    setResults([]);\n    setStandings({});\n  };\n  const generatePouleSchedule = () => {\n    const {\n      teamNames,\n      numPoules,\n      numCourts,\n      matchTime,\n      startTime\n    } = config;\n    const poules = Array.from({\n      length: numPoules\n    }, () => []);\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n    let currentTime = startTime;\n    const generatedSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          const nonPlayingTeams = teamNames.filter(team => team !== poule[i] && team !== poule[j]);\n          const referee = nonPlayingTeams[generatedSchedule.length % nonPlayingTeams.length];\n          generatedSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: generatedSchedule.length % numCourts + 1,\n            referee,\n            score1: 0,\n            score2: 0\n          });\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(generatedSchedule);\n  };\n  const updateStandings = (newResults, currentStandings = {}) => {\n    // Start fresh with each update\n    const updatedStandings = {};\n\n    // First, copy over existing standings for poules that aren't being updated\n    Object.entries(currentStandings).forEach(([poule, pouleStandings]) => {\n      updatedStandings[poule] = {\n        ...pouleStandings\n      };\n    });\n\n    // Process each match result\n    newResults.forEach(match => {\n      const {\n        teams,\n        score1,\n        score2,\n        poule\n      } = match;\n      const pouleNumber = parseInt(poule, 10);\n\n      // Initialize the poule if not present\n      if (!updatedStandings[pouleNumber]) {\n        updatedStandings[pouleNumber] = {};\n      }\n\n      // Parse team names\n      const [team1, team2] = teams.split(' vs ').map(t => t.trim());\n      const team1Score = parseInt(score1, 10);\n      const team2Score = parseInt(score2, 10);\n\n      // Initialize teams if they don't exist in this poule\n      [team1, team2].forEach(team => {\n        if (!updatedStandings[pouleNumber][team]) {\n          updatedStandings[pouleNumber][team] = {\n            name: team,\n            played: 0,\n            won: 0,\n            points: 0,\n            scored: 0,\n            against: 0\n          };\n        }\n      });\n\n      // Update statistics for both teams\n      const team1Stats = updatedStandings[pouleNumber][team1];\n      const team2Stats = updatedStandings[pouleNumber][team2];\n\n      // Reset previous match stats if this is a score update\n      if (team1Stats.played > 0) {\n        team1Stats.played--;\n        team2Stats.played--;\n        if (team1Stats.won > 0) team1Stats.points -= 3;\n        if (team2Stats.won > 0) team2Stats.points -= 3;\n      }\n\n      // Update match statistics\n      team1Stats.played++;\n      team2Stats.played++;\n      team1Stats.scored = (team1Stats.scored || 0) + team1Score;\n      team1Stats.against = (team1Stats.against || 0) + team2Score;\n      team2Stats.scored = (team2Stats.scored || 0) + team2Score;\n      team2Stats.against = (team2Stats.against || 0) + team1Score;\n\n      // Determine winner and update points\n      if (team1Score > team2Score) {\n        team1Stats.won++;\n        team1Stats.points += 3;\n      } else if (team2Score > team1Score) {\n        team2Stats.won++;\n        team2Stats.points += 3;\n      } else {\n        team1Stats.points += 1;\n        team2Stats.points += 1;\n      }\n    });\n    return updatedStandings;\n  };\n  const debugStandings = results => {\n    console.log('Debug: Processing Results');\n    results.forEach(match => {\n      console.log(`Match: ${match.teams}`);\n      console.log(`Scores: ${match.score1}-${match.score2}`);\n      console.log(`Poule: ${match.poule}`);\n    });\n    const standings = updateStandings(results);\n    console.log('Debug: Final Standings', standings);\n    return standings;\n  };\n  const handleSaveResults = newResults => {\n    if (!Array.isArray(newResults)) {\n      console.error(\"Expected newResults to be an array\");\n      return;\n    }\n    const completeResults = newResults.filter(result => result.teams && result.score1 !== undefined && result.score2 !== undefined && result.poule);\n    if (completeResults.length > 0) {\n      console.log(\"Saving results:\", completeResults);\n      const newStandings = updateStandings(completeResults);\n      console.log(\"New standings after update:\", newStandings);\n      setResults(completeResults);\n      setStandings(newStandings);\n    } else {\n      console.warn(\"No complete match results to save\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), !config ? /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleConfigSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePouleSchedule,\n        children: \"Generate Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n        schedule: schedule\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n        matches: schedule,\n        onSaveResults: handleSaveResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n        standings: standings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setKnockoutStage(true),\n        children: \"Save Results & Start Knockout Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), knockoutStage && /*#__PURE__*/_jsxDEV(KnockoutRounds, {\n        teams: knockoutTeams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4eUxLSdbMenZ8rgivkaQwqPq/+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","KnockoutRounds","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","config","setConfig","schedule","setSchedule","results","setResults","standings","setStandings","knockoutStage","setKnockoutStage","knockoutTeams","setKnockoutTeams","handleConfigSubmit","newConfig","generatePouleSchedule","teamNames","numPoules","numCourts","matchTime","startTime","poules","Array","from","length","forEach","team","index","pouleIndex","push","addMinutes","time","minutes","hour","min","split","map","Number","newMinutes","newHour","Math","floor","newMin","String","padStart","currentTime","generatedSchedule","poule","i","j","nonPlayingTeams","filter","referee","teams","court","score1","score2","updateStandings","newResults","currentStandings","updatedStandings","Object","entries","pouleStandings","match","pouleNumber","parseInt","team1","team2","t","trim","team1Score","team2Score","name","played","won","points","scored","against","team1Stats","team2Stats","debugStandings","console","log","handleSaveResults","isArray","error","completeResults","result","undefined","newStandings","warn","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","matches","onSaveResults","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport KnockoutRounds from './components/KnockoutRounds';\nimport './styles/index.css';\n\nconst App = () => {\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState({});\n  const [standings, setStandings] = useState({});\n  const [knockoutStage, setKnockoutStage] = useState(false);\n  const [knockoutTeams, setKnockoutTeams] = useState([]);\n\n  const handleConfigSubmit = (newConfig) => {\n    setConfig(newConfig);\n    setKnockoutStage(false);\n    setSchedule([]);\n    setResults([]);\n    setStandings({});\n  };\n\n  const generatePouleSchedule = () => {\n    const { teamNames, numPoules, numCourts, matchTime, startTime } = config;\n    const poules = Array.from({ length: numPoules }, () => []);\n\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n\n    let currentTime = startTime;\n    const generatedSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          const nonPlayingTeams = teamNames.filter(\n            (team) => team !== poule[i] && team !== poule[j]\n          );\n          const referee = nonPlayingTeams[(generatedSchedule.length) % nonPlayingTeams.length];\n\n          generatedSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: (generatedSchedule.length % numCourts) + 1,\n            referee,\n            score1: 0,\n            score2: 0,\n          });\n\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(generatedSchedule);\n  };\n\nconst updateStandings = (newResults, currentStandings = {}) => {\n  // Start fresh with each update\n  const updatedStandings = {};\n\n  // First, copy over existing standings for poules that aren't being updated\n  Object.entries(currentStandings).forEach(([poule, pouleStandings]) => {\n    updatedStandings[poule] = { ...pouleStandings };\n  });\n\n  // Process each match result\n  newResults.forEach((match) => {\n    const { teams, score1, score2, poule } = match;\n    const pouleNumber = parseInt(poule, 10);\n\n    // Initialize the poule if not present\n    if (!updatedStandings[pouleNumber]) {\n      updatedStandings[pouleNumber] = {};\n    }\n\n    // Parse team names\n    const [team1, team2] = teams.split(' vs ').map(t => t.trim());\n    const team1Score = parseInt(score1, 10);\n    const team2Score = parseInt(score2, 10);\n\n    // Initialize teams if they don't exist in this poule\n    [team1, team2].forEach(team => {\n      if (!updatedStandings[pouleNumber][team]) {\n        updatedStandings[pouleNumber][team] = {\n          name: team,\n          played: 0,\n          won: 0,\n          points: 0,\n          scored: 0,\n          against: 0\n        };\n      }\n    });\n\n    // Update statistics for both teams\n    const team1Stats = updatedStandings[pouleNumber][team1];\n    const team2Stats = updatedStandings[pouleNumber][team2];\n\n    // Reset previous match stats if this is a score update\n    if (team1Stats.played > 0) {\n      team1Stats.played--;\n      team2Stats.played--;\n      if (team1Stats.won > 0) team1Stats.points -= 3;\n      if (team2Stats.won > 0) team2Stats.points -= 3;\n    }\n\n    // Update match statistics\n    team1Stats.played++;\n    team2Stats.played++;\n    team1Stats.scored = (team1Stats.scored || 0) + team1Score;\n    team1Stats.against = (team1Stats.against || 0) + team2Score;\n    team2Stats.scored = (team2Stats.scored || 0) + team2Score;\n    team2Stats.against = (team2Stats.against || 0) + team1Score;\n\n    // Determine winner and update points\n    if (team1Score > team2Score) {\n      team1Stats.won++;\n      team1Stats.points += 3;\n    } else if (team2Score > team1Score) {\n      team2Stats.won++;\n      team2Stats.points += 3;\n    } else {\n      team1Stats.points += 1;\n      team2Stats.points += 1;\n    }\n  });\n\n  return updatedStandings;\n};\n\n  const debugStandings = (results) => {\n    console.log('Debug: Processing Results');\n    results.forEach(match => {\n      console.log(`Match: ${match.teams}`);\n      console.log(`Scores: ${match.score1}-${match.score2}`);\n      console.log(`Poule: ${match.poule}`);\n    });\n\n    const standings = updateStandings(results);\n    console.log('Debug: Final Standings', standings);\n    return standings;\n  };\n\nconst handleSaveResults = (newResults) => {\n  if (!Array.isArray(newResults)) {\n    console.error(\"Expected newResults to be an array\");\n    return;\n  }\n\n  const completeResults = newResults.filter(result =>\n    result.teams &&\n    result.score1 !== undefined &&\n    result.score2 !== undefined &&\n    result.poule\n  );\n\n  if (completeResults.length > 0) {\n    console.log(\"Saving results:\", completeResults);\n    const newStandings = updateStandings(completeResults);\n    console.log(\"New standings after update:\", newStandings);\n    setResults(completeResults);\n    setStandings(newStandings);\n  } else {\n    console.warn(\"No complete match results to save\");\n  }\n};\n\n  return (\n    <div>\n      <h1>Volleyball Tournament Configuration</h1>\n      {!config ? (\n        <ConfigurationForm onSubmit={handleConfigSubmit} />\n      ) : (\n        <>\n          <button onClick={generatePouleSchedule}>Generate Schedule</button>\n          <PouleSchedule schedule={schedule} />\n          <MatchResults matches={schedule} onSaveResults={handleSaveResults} />\n          <LiveStandings standings={standings} />\n          <button onClick={() => setKnockoutStage(true)}>Save Results & Start Knockout Rounds</button>\n          {knockoutStage && <KnockoutRounds teams={knockoutTeams} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}