{"ast":null,"code":"var _jsxFileName = \"/app/src/components/KnockoutRounds.js\",\n  _s = $RefreshSig$();\n// KnockoutRounds.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KnockoutRounds = ({\n  teams\n}) => {\n  _s();\n  const [semiFinals, setSemiFinals] = useState([{\n    team1: teams[0],\n    team2: teams[3],\n    score1: null,\n    score2: null\n  }, {\n    team1: teams[1],\n    team2: teams[2],\n    score1: null,\n    score2: null\n  }]);\n  const [finalMatch, setFinalMatch] = useState(null);\n  const [winner, setWinner] = useState(null);\n  const handleScoreSubmit = (round, index, score1, score2) => {\n    if (round === 'semi') {\n      const newSemiFinals = [...semiFinals];\n      newSemiFinals[index].score1 = score1;\n      newSemiFinals[index].score2 = score2;\n      setSemiFinals(newSemiFinals);\n      if (newSemiFinals.every(match => match.score1 !== null && match.score2 !== null)) {\n        const finalists = newSemiFinals.map(match => match.score1 > match.score2 ? match.team1 : match.team2);\n        setFinalMatch({\n          team1: finalists[0],\n          team2: finalists[1],\n          score1: null,\n          score2: null\n        });\n      }\n    } else if (round === 'final') {\n      const newFinalMatch = {\n        ...finalMatch,\n        score1,\n        score2\n      };\n      setFinalMatch(newFinalMatch);\n      setWinner(score1 > score2 ? finalMatch.team1 : finalMatch.team2);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Knockout Rounds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Semifinals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), semiFinals.map((match, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Match \", index + 1, \": \", match.team1, \" vs \", match.team2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Score Team 1\",\n          onChange: e => handleScoreSubmit('semi', index, parseInt(e.target.value), match.score2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Score Team 2\",\n          onChange: e => handleScoreSubmit('semi', index, match.score1, parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), finalMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Final\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Match: \", finalMatch.team1, \" vs \", finalMatch.team2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Score Team 1\",\n        onChange: e => handleScoreSubmit('final', null, parseInt(e.target.value), finalMatch.score2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Score Team 2\",\n        onChange: e => handleScoreSubmit('final', null, finalMatch.score1, parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Congratulations to the Tournament Champion: \", winner, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(KnockoutRounds, \"6ghCcHDxlQbhPU/soN0PpTfr/Ck=\");\n_c = KnockoutRounds;\nexport default KnockoutRounds;\nvar _c;\n$RefreshReg$(_c, \"KnockoutRounds\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","KnockoutRounds","teams","_s","semiFinals","setSemiFinals","team1","team2","score1","score2","finalMatch","setFinalMatch","winner","setWinner","handleScoreSubmit","round","index","newSemiFinals","every","match","finalists","map","newFinalMatch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","parseInt","target","value","_c","$RefreshReg$"],"sources":["/app/src/components/KnockoutRounds.js"],"sourcesContent":["// KnockoutRounds.js\nimport React, { useState } from 'react';\n\nconst KnockoutRounds = ({ teams }) => {\n  const [semiFinals, setSemiFinals] = useState([\n    { team1: teams[0], team2: teams[3], score1: null, score2: null },\n    { team1: teams[1], team2: teams[2], score1: null, score2: null }\n  ]);\n  const [finalMatch, setFinalMatch] = useState(null);\n  const [winner, setWinner] = useState(null);\n\n  const handleScoreSubmit = (round, index, score1, score2) => {\n    if (round === 'semi') {\n      const newSemiFinals = [...semiFinals];\n      newSemiFinals[index].score1 = score1;\n      newSemiFinals[index].score2 = score2;\n      setSemiFinals(newSemiFinals);\n\n      if (newSemiFinals.every(match => match.score1 !== null && match.score2 !== null)) {\n        const finalists = newSemiFinals.map(match =>\n          match.score1 > match.score2 ? match.team1 : match.team2\n        );\n        setFinalMatch({ team1: finalists[0], team2: finalists[1], score1: null, score2: null });\n      }\n    } else if (round === 'final') {\n      const newFinalMatch = { ...finalMatch, score1, score2 };\n      setFinalMatch(newFinalMatch);\n      setWinner(score1 > score2 ? finalMatch.team1 : finalMatch.team2);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Knockout Rounds</h2>\n      <div>\n        <h3>Semifinals</h3>\n        {semiFinals.map((match, index) => (\n          <div key={index}>\n            <p>Match {index + 1}: {match.team1} vs {match.team2}</p>\n            <input type=\"number\" placeholder=\"Score Team 1\" onChange={(e) => handleScoreSubmit('semi', index, parseInt(e.target.value), match.score2)} />\n            <input type=\"number\" placeholder=\"Score Team 2\" onChange={(e) => handleScoreSubmit('semi', index, match.score1, parseInt(e.target.value))} />\n          </div>\n        ))}\n      </div>\n      {finalMatch && (\n        <div>\n          <h3>Final</h3>\n          <p>Match: {finalMatch.team1} vs {finalMatch.team2}</p>\n          <input type=\"number\" placeholder=\"Score Team 1\" onChange={(e) => handleScoreSubmit('final', null, parseInt(e.target.value), finalMatch.score2)} />\n          <input type=\"number\" placeholder=\"Score Team 2\" onChange={(e) => handleScoreSubmit('final', null, finalMatch.score1, parseInt(e.target.value))} />\n        </div>\n      )}\n      {winner && (\n        <div>\n          <h3>Congratulations to the Tournament Champion: {winner}!</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default KnockoutRounds;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}