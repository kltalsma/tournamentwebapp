{"ast":null,"code":"var _jsxFileName = \"/app/src/components/LiveStandings.js\";\n// LiveStandings.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveStandings = ({\n  standings\n}) => {\n  // Helper function to calculate difference\n  const calculateDifference = (scored, against) => scored - against;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Tournament Standings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), Object.keys(standings).map(pouleNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Poule \", pouleNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"standings-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Played\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Won\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Scored\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Against\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Difference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(standings[pouleNumber]).sort((a, b) => {\n            // First by points\n            if (b.points !== a.points) return b.points - a.points;\n            // Then by goal difference\n            const diffA = calculateDifference(a.scored, a.against);\n            const diffB = calculateDifference(b.scored, b.against);\n            if (diffB !== diffA) return diffB - diffA;\n            // Finally by goals scored\n            return b.scored - a.scored;\n          }).map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.played\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.won\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.scored\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.against\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: calculateDifference(team.scored, team.against) > 0 ? 'positive' : calculateDifference(team.scored, team.against) < 0 ? 'negative' : '',\n              children: calculateDifference(team.scored, team.against)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, team.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, pouleNumber, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = LiveStandings;\nexport default LiveStandings;\n\n// Updated App.js updateStandings function\nconst updateStandings = newResults => {\n  // Create a new standings object\n  const updatedStandings = {};\n\n  // Process each match result\n  newResults.forEach(match => {\n    const {\n      teams,\n      score1,\n      score2,\n      poule\n    } = match;\n\n    // Initialize poule if it doesn't exist\n    if (!updatedStandings[poule]) {\n      updatedStandings[poule] = {};\n    }\n\n    // Split teams and parse scores\n    const [team1, team2] = teams.split(' vs ').map(t => t.trim());\n    const team1Score = parseInt(score1);\n    const team2Score = parseInt(score2);\n\n    // Initialize teams if they don't exist\n    [team1, team2].forEach(team => {\n      if (!updatedStandings[poule][team]) {\n        updatedStandings[poule][team] = {\n          name: team,\n          played: 0,\n          won: 0,\n          points: 0,\n          scored: 0,\n          against: 0\n        };\n      }\n    });\n\n    // Update match statistics\n    const team1Stats = updatedStandings[poule][team1];\n    const team2Stats = updatedStandings[poule][team2];\n\n    // Update games played\n    team1Stats.played++;\n    team2Stats.played++;\n\n    // Update scores\n    team1Stats.scored += team1Score;\n    team1Stats.against += team2Score;\n    team2Stats.scored += team2Score;\n    team2Stats.against += team1Score;\n\n    // Update wins and points\n    if (team1Score > team2Score) {\n      team1Stats.won++;\n      team1Stats.points += 3;\n    } else if (team2Score > team1Score) {\n      team2Stats.won++;\n      team2Stats.points += 3;\n    } else {\n      // Draw\n      team1Stats.points += 1;\n      team2Stats.points += 1;\n    }\n  });\n\n  // Sort teams within each poule\n  Object.keys(updatedStandings).forEach(poule => {\n    const teams = Object.values(updatedStandings[poule]);\n    teams.sort((a, b) => {\n      // Sort by points first\n      if (b.points !== a.points) return b.points - a.points;\n      // Then by goal difference\n      const diffA = a.scored - a.against;\n      const diffB = b.scored - b.against;\n      if (diffB !== diffA) return diffB - diffA;\n      // Finally by goals scored\n      return b.scored - a.scored;\n    });\n\n    // Convert back to object\n    updatedStandings[poule] = teams.reduce((acc, team) => {\n      acc[team.name] = team;\n      return acc;\n    }, {});\n  });\n  return updatedStandings;\n};\n\n// Add to App.js - debug helper\nconst debugStandings = results => {\n  console.log('Debug: Processing Results');\n  results.forEach(match => {\n    console.log(`Match: ${match.teams}`);\n    console.log(`Scores: ${match.score1}-${match.score2}`);\n    console.log(`Poule: ${match.poule}`);\n  });\n  const standings = updateStandings(results);\n  console.log('Debug: Final Standings', standings);\n  return standings;\n};\n\n// Update the handleSaveResults function in App.js\nconst handleSaveResults = newResults => {\n  if (!Array.isArray(newResults)) {\n    console.error(\"Expected newResults to be an array\");\n    return;\n  }\n  const completeResults = newResults.filter(result => result.teams && result.score1 !== undefined && result.score2 !== undefined && result.poule);\n  if (completeResults.length > 0) {\n    // Use debug function during development\n    const newStandings = debugStandings(completeResults);\n    setResults(completeResults);\n    setStandings(newStandings);\n  } else {\n    console.warn(\"No complete match results to save\");\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"LiveStandings\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LiveStandings","standings","calculateDifference","scored","against","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","pouleNumber","className","values","sort","a","b","points","diffA","diffB","team","name","played","won","_c","updateStandings","newResults","updatedStandings","forEach","match","teams","score1","score2","poule","team1","team2","split","t","trim","team1Score","parseInt","team2Score","team1Stats","team2Stats","reduce","acc","debugStandings","results","console","log","handleSaveResults","Array","isArray","error","completeResults","filter","result","undefined","length","newStandings","setResults","setStandings","warn","$RefreshReg$"],"sources":["/app/src/components/LiveStandings.js"],"sourcesContent":["// LiveStandings.js\nimport React from 'react';\n\nconst LiveStandings = ({ standings }) => {\n  // Helper function to calculate difference\n  const calculateDifference = (scored, against) => scored - against;\n\n  return (\n    <div>\n      <h2>Live Tournament Standings</h2>\n      {Object.keys(standings).map((pouleNumber) => (\n        <div key={pouleNumber}>\n          <h3>Poule {pouleNumber}</h3>\n          <table className=\"standings-table\">\n            <thead>\n              <tr>\n                <th>Team</th>\n                <th>Played</th>\n                <th>Won</th>\n                <th>Points</th>\n                <th>Scored</th>\n                <th>Against</th>\n                <th>Difference</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(standings[pouleNumber])\n                .sort((a, b) => {\n                  // First by points\n                  if (b.points !== a.points) return b.points - a.points;\n                  // Then by goal difference\n                  const diffA = calculateDifference(a.scored, a.against);\n                  const diffB = calculateDifference(b.scored, b.against);\n                  if (diffB !== diffA) return diffB - diffA;\n                  // Finally by goals scored\n                  return b.scored - a.scored;\n                })\n                .map((team) => (\n                  <tr key={team.name}>\n                    <td>{team.name}</td>\n                    <td>{team.played}</td>\n                    <td>{team.won}</td>\n                    <td>{team.points}</td>\n                    <td>{team.scored}</td>\n                    <td>{team.against}</td>\n                    <td className={calculateDifference(team.scored, team.against) > 0 ? 'positive' : \n                                 calculateDifference(team.scored, team.against) < 0 ? 'negative' : ''}>\n                      {calculateDifference(team.scored, team.against)}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LiveStandings;\n\n// Updated App.js updateStandings function\nconst updateStandings = (newResults) => {\n  // Create a new standings object\n  const updatedStandings = {};\n\n  // Process each match result\n  newResults.forEach((match) => {\n    const { teams, score1, score2, poule } = match;\n    \n    // Initialize poule if it doesn't exist\n    if (!updatedStandings[poule]) {\n      updatedStandings[poule] = {};\n    }\n\n    // Split teams and parse scores\n    const [team1, team2] = teams.split(' vs ').map(t => t.trim());\n    const team1Score = parseInt(score1);\n    const team2Score = parseInt(score2);\n\n    // Initialize teams if they don't exist\n    [team1, team2].forEach(team => {\n      if (!updatedStandings[poule][team]) {\n        updatedStandings[poule][team] = {\n          name: team,\n          played: 0,\n          won: 0,\n          points: 0,\n          scored: 0,\n          against: 0\n        };\n      }\n    });\n\n    // Update match statistics\n    const team1Stats = updatedStandings[poule][team1];\n    const team2Stats = updatedStandings[poule][team2];\n\n    // Update games played\n    team1Stats.played++;\n    team2Stats.played++;\n\n    // Update scores\n    team1Stats.scored += team1Score;\n    team1Stats.against += team2Score;\n    team2Stats.scored += team2Score;\n    team2Stats.against += team1Score;\n\n    // Update wins and points\n    if (team1Score > team2Score) {\n      team1Stats.won++;\n      team1Stats.points += 3;\n    } else if (team2Score > team1Score) {\n      team2Stats.won++;\n      team2Stats.points += 3;\n    } else {\n      // Draw\n      team1Stats.points += 1;\n      team2Stats.points += 1;\n    }\n  });\n\n  // Sort teams within each poule\n  Object.keys(updatedStandings).forEach(poule => {\n    const teams = Object.values(updatedStandings[poule]);\n    teams.sort((a, b) => {\n      // Sort by points first\n      if (b.points !== a.points) return b.points - a.points;\n      // Then by goal difference\n      const diffA = a.scored - a.against;\n      const diffB = b.scored - b.against;\n      if (diffB !== diffA) return diffB - diffA;\n      // Finally by goals scored\n      return b.scored - a.scored;\n    });\n    \n    // Convert back to object\n    updatedStandings[poule] = teams.reduce((acc, team) => {\n      acc[team.name] = team;\n      return acc;\n    }, {});\n  });\n\n  return updatedStandings;\n};\n\n// Add to App.js - debug helper\nconst debugStandings = (results) => {\n  console.log('Debug: Processing Results');\n  results.forEach(match => {\n    console.log(`Match: ${match.teams}`);\n    console.log(`Scores: ${match.score1}-${match.score2}`);\n    console.log(`Poule: ${match.poule}`);\n  });\n  \n  const standings = updateStandings(results);\n  console.log('Debug: Final Standings', standings);\n  return standings;\n};\n\n// Update the handleSaveResults function in App.js\nconst handleSaveResults = (newResults) => {\n  if (!Array.isArray(newResults)) {\n    console.error(\"Expected newResults to be an array\");\n    return;\n  }\n\n  const completeResults = newResults.filter(result => \n    result.teams && \n    result.score1 !== undefined && \n    result.score2 !== undefined &&\n    result.poule\n  );\n\n  if (completeResults.length > 0) {\n    // Use debug function during development\n    const newStandings = debugStandings(completeResults);\n    setResults(completeResults);\n    setStandings(newStandings);\n  } else {\n    console.warn(\"No complete match results to save\");\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}