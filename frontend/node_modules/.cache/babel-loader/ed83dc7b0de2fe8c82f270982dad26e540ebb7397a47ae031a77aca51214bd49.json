{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport apiClient from './apiClient';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [schedule, setSchedule] = useState([]);\n  const [matches, setMatches] = useState([]); // Ensure matches has a default empty array\n  const [standings, setStandings] = useState([]);\n  const handleCreateTournament = async config => {\n    try {\n      const response = await apiClient.post('/api/tournament', config);\n      setMessage(`Tournament created successfully with ID: ${response.data.id}`);\n      setSchedule(generatePouleSchedule(config));\n      setMatches(generateMatchList(config.teamNames));\n      setStandings(generateInitialStandings(config.teamNames));\n    } catch (error) {\n      console.error('Error creating tournament:', error);\n      setMessage('Failed to create tournament. Please try again.');\n    }\n  };\n  const handleSaveResults = results => {\n    // Process results and update standings accordingly\n    const updatedStandings = calculateStandings(results);\n    setStandings(updatedStandings);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleCreateTournament\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"confirmation-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n      schedule: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), matches.length > 0 && /*#__PURE__*/_jsxDEV(MatchResults, {\n      matches: matches,\n      onSaveResults: handleSaveResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n      standings: standings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n// Updated generateMatchList function with initialized scores\n_s(App, \"qP2d4GpS4+yCDeTLgaV7XlwuEGE=\");\n_c = App;\nconst generateMatchList = teamNames => {\n  // Initialize each match with team names and initial scores\n  return teamNames.map((team, index) => ({\n    teams: `${team} vs Team ${index + 1}`,\n    score1: 0,\n    // Placeholder score\n    score2: 0 // Placeholder score\n  }));\n};\nconst generatePouleSchedule = config => {\n  const {\n    numPoules,\n    numCourts,\n    teamNames,\n    startTime,\n    matchTime\n  } = config;\n  const poules = Array.from({\n    length: numPoules\n  }, () => []);\n\n  // Distribute teams into poules\n  teamNames.forEach((team, index) => {\n    const pouleIndex = index % numPoules;\n    poules[pouleIndex].push(team);\n  });\n\n  // Helper function to add minutes to a time string (HHMM format)\n  const addMinutes = (time, minutes) => {\n    const hours = parseInt(time.slice(0, 2), 10);\n    const mins = parseInt(time.slice(2), 10) + minutes;\n    const newHours = hours + Math.floor(mins / 60);\n    const newMins = mins % 60;\n    return `${String(newHours).padStart(2, '0')}:${String(newMins).padStart(2, '0')}`;\n  };\n\n  // Generate the schedule\n  let currentTime = startTime;\n  const schedule = [];\n  poules.forEach((poule, pouleIndex) => {\n    for (let i = 0; i < poule.length - 1; i++) {\n      for (let j = i + 1; j < poule.length; j++) {\n        schedule.push({\n          time: currentTime,\n          teams: `${poule[i]} vs ${poule[j]}`,\n          poule: pouleIndex + 1,\n          court: schedule.length % numCourts + 1\n        });\n        currentTime = addMinutes(currentTime.replace(':', ''), matchTime); // Increment time for each match\n      }\n    }\n  });\n  return schedule;\n};\nconst generateInitialStandings = teamNames => {\n  return teamNames.map(name => ({\n    name,\n    played: 0,\n    won: 0,\n    points: 0\n  }));\n};\nconst calculateStandings = (results, teamPoules) => {\n  const standings = {};\n  results.forEach(({\n    teams,\n    score1,\n    score2\n  }) => {\n    const [team1, team2] = teams.split(' vs ');\n    const poule1 = teamPoules[team1];\n    const poule2 = teamPoules[team2];\n    if (!standings[team1]) standings[team1] = {\n      name: team1,\n      played: 0,\n      won: 0,\n      points: 0,\n      poule: poule1\n    };\n    if (!standings[team2]) standings[team2] = {\n      name: team2,\n      played: 0,\n      won: 0,\n      points: 0,\n      poule: poule2\n    };\n    standings[team1].played += 1;\n    standings[team2].played += 1;\n    if (score1 > score2) {\n      standings[team1].won += 1;\n      standings[team1].points += 3;\n    } else if (score2 > score1) {\n      standings[team2].won += 1;\n      standings[team2].points += 3;\n    } else {\n      standings[team1].points += 1;\n      standings[team2].points += 1;\n    }\n  });\n  return Object.values(standings).sort((a, b) => b.points - a.points || b.won - a.won);\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","apiClient","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","jsxDEV","_jsxDEV","App","_s","message","setMessage","schedule","setSchedule","matches","setMatches","standings","setStandings","handleCreateTournament","config","response","post","data","id","generatePouleSchedule","generateMatchList","teamNames","generateInitialStandings","error","console","handleSaveResults","results","updatedStandings","calculateStandings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","onSaveResults","_c","map","team","index","teams","score1","score2","numPoules","numCourts","startTime","matchTime","poules","Array","from","forEach","pouleIndex","push","addMinutes","time","minutes","hours","parseInt","slice","mins","newHours","Math","floor","newMins","String","padStart","currentTime","poule","i","j","court","replace","name","played","won","points","teamPoules","team1","team2","split","poule1","poule2","Object","values","sort","a","b","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport apiClient from './apiClient';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [schedule, setSchedule] = useState([]);\n  const [matches, setMatches] = useState([]); // Ensure matches has a default empty array\n  const [standings, setStandings] = useState([]);\n\n  const handleCreateTournament = async (config) => {\n    try {\n      const response = await apiClient.post('/api/tournament', config);\n      setMessage(`Tournament created successfully with ID: ${response.data.id}`);\n      setSchedule(generatePouleSchedule(config));\n      setMatches(generateMatchList(config.teamNames));\n      setStandings(generateInitialStandings(config.teamNames));\n    } catch (error) {\n      console.error('Error creating tournament:', error);\n      setMessage('Failed to create tournament. Please try again.');\n    }\n  };\n\n  const handleSaveResults = (results) => {\n    // Process results and update standings accordingly\n    const updatedStandings = calculateStandings(results);\n    setStandings(updatedStandings);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Volleyball Tournament Configuration</h1>\n      <ConfigurationForm onSubmit={handleCreateTournament} />\n      {message && <p className=\"confirmation-message\">{message}</p>}\n      <PouleSchedule schedule={schedule} />\n      {matches.length > 0 && <MatchResults matches={matches} onSaveResults={handleSaveResults} />}\n      <LiveStandings standings={standings} />\n    </div>\n  );\n}\n\n// Updated generateMatchList function with initialized scores\nconst generateMatchList = (teamNames) => {\n  // Initialize each match with team names and initial scores\n  return teamNames.map((team, index) => ({\n    teams: `${team} vs Team ${index + 1}`,\n    score1: 0, // Placeholder score\n    score2: 0, // Placeholder score\n  }));\n};\n\nconst generatePouleSchedule = (config) => {\n  const { numPoules, numCourts, teamNames, startTime, matchTime } = config;\n  const poules = Array.from({ length: numPoules }, () => []);\n\n  // Distribute teams into poules\n  teamNames.forEach((team, index) => {\n    const pouleIndex = index % numPoules;\n    poules[pouleIndex].push(team);\n  });\n\n  // Helper function to add minutes to a time string (HHMM format)\n  const addMinutes = (time, minutes) => {\n    const hours = parseInt(time.slice(0, 2), 10);\n    const mins = parseInt(time.slice(2), 10) + minutes;\n    const newHours = hours + Math.floor(mins / 60);\n    const newMins = mins % 60;\n    return `${String(newHours).padStart(2, '0')}:${String(newMins).padStart(2, '0')}`;\n  };\n\n  // Generate the schedule\n  let currentTime = startTime;\n  const schedule = [];\n  poules.forEach((poule, pouleIndex) => {\n    for (let i = 0; i < poule.length - 1; i++) {\n      for (let j = i + 1; j < poule.length; j++) {\n        schedule.push({\n          time: currentTime,\n          teams: `${poule[i]} vs ${poule[j]}`,\n          poule: pouleIndex + 1,\n          court: (schedule.length % numCourts) + 1,\n        });\n        currentTime = addMinutes(currentTime.replace(':', ''), matchTime); // Increment time for each match\n      }\n    }\n  });\n\n  return schedule;\n};\n\nconst generateInitialStandings = (teamNames) => {\n  return teamNames.map((name) => ({ name, played: 0, won: 0, points: 0 }));\n};\n\nconst calculateStandings = (results, teamPoules) => {\n  const standings = {};\n\n  results.forEach(({ teams, score1, score2 }) => {\n    const [team1, team2] = teams.split(' vs ');\n    const poule1 = teamPoules[team1];\n    const poule2 = teamPoules[team2];\n\n    if (!standings[team1]) standings[team1] = { name: team1, played: 0, won: 0, points: 0, poule: poule1 };\n    if (!standings[team2]) standings[team2] = { name: team2, played: 0, won: 0, points: 0, poule: poule2 };\n\n    standings[team1].played += 1;\n    standings[team2].played += 1;\n\n    if (score1 > score2) {\n      standings[team1].won += 1;\n      standings[team1].points += 3;\n    } else if (score2 > score1) {\n      standings[team2].won += 1;\n      standings[team2].points += 3;\n    } else {\n      standings[team1].points += 1;\n      standings[team2].points += 1;\n    }\n  });\n\n  return Object.values(standings).sort((a, b) => b.points - a.points || b.won - a.won);\n};\n\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}