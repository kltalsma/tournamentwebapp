{"ast":null,"code":"var _jsxFileName = \"/app/src/components/LiveStandings.js\";\nimport React from 'react';\nimport '../styles/LiveStandings.css'; // We'll create this CSS file separately\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveStandings = ({\n  standings\n}) => {\n  if (!standings || Object.keys(standings).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"live-standings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live Tournament Standings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No standings data available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n  const sortedPoules = Object.keys(standings).sort((a, b) => parseInt(a) - parseInt(b));\n  const renderStandingsTable = (pouleNumber, pouleStandings) => {\n    const teamsArray = Object.values(pouleStandings).sort((a, b) => {\n      if (b.points !== a.points) return b.points - a.points;\n      const goalDiffA = a.scored - a.against;\n      const goalDiffB = b.scored - b.against;\n      if (goalDiffB !== goalDiffA) return goalDiffB - goalDiffA;\n      return b.scored - a.scored;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poule-standings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Poule \", pouleNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"standings-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left\",\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Played\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Won\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Scored\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Against\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Difference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teamsArray.map((team, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index % 2 === 0 ? 'even-row' : 'odd-row',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-left\",\n              children: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.played\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.won\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"points-cell\",\n              children: team.points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.scored\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.against\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: team.scored - team.against > 0 ? 'positive' : team.scored - team.against < 0 ? 'negative' : '',\n              children: team.scored - team.against\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, team.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, pouleNumber, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-standings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Tournament Standings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), sortedPoules.map(pouleNumber => renderStandingsTable(pouleNumber, standings[pouleNumber]))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = LiveStandings;\nexport default LiveStandings;\nvar _c;\n$RefreshReg$(_c, \"LiveStandings\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LiveStandings","standings","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedPoules","sort","a","b","parseInt","renderStandingsTable","pouleNumber","pouleStandings","teamsArray","values","points","goalDiffA","scored","against","goalDiffB","map","team","index","name","played","won","_c","$RefreshReg$"],"sources":["/app/src/components/LiveStandings.js"],"sourcesContent":["import React from 'react';\nimport '../styles/LiveStandings.css';  // We'll create this CSS file separately\nconst LiveStandings = ({ standings }) => {\n  if (!standings || Object.keys(standings).length === 0) {\n    return (\n      <div className=\"live-standings\">\n        <h2>Live Tournament Standings</h2>\n        <p>No standings data available yet.</p>\n      </div>\n    );\n  }\n\n  const sortedPoules = Object.keys(standings).sort((a, b) => parseInt(a) - parseInt(b));\n\n  const renderStandingsTable = (pouleNumber, pouleStandings) => {\n    const teamsArray = Object.values(pouleStandings).sort((a, b) => {\n      if (b.points !== a.points) return b.points - a.points;\n      const goalDiffA = a.scored - a.against;\n      const goalDiffB = b.scored - b.against;\n      if (goalDiffB !== goalDiffA) return goalDiffB - goalDiffA;\n      return b.scored - a.scored;\n    });\n\n    return (\n      <div key={pouleNumber} className=\"poule-standings\">\n        <h3>Poule {pouleNumber}</h3>\n        <table className=\"standings-table\">\n          <thead>\n            <tr>\n              <th className=\"text-left\">Team</th>\n              <th>Played</th>\n              <th>Won</th>\n              <th>Points</th>\n              <th>Scored</th>\n              <th>Against</th>\n              <th>Difference</th>\n            </tr>\n          </thead>\n          <tbody>\n            {teamsArray.map((team, index) => (\n              <tr key={team.name} className={index % 2 === 0 ? 'even-row' : 'odd-row'}>\n                <td className=\"text-left\">{team.name}</td>\n                <td>{team.played}</td>\n                <td>{team.won}</td>\n                <td className=\"points-cell\">{team.points}</td>\n                <td>{team.scored}</td>\n                <td>{team.against}</td>\n                <td className={\n                  team.scored - team.against > 0 ? 'positive' : \n                  team.scored - team.against < 0 ? 'negative' : ''\n                }>\n                  {team.scored - team.against}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"live-standings\">\n      <h2>Live Tournament Standings</h2>\n      {sortedPoules.map((pouleNumber) => (\n        renderStandingsTable(pouleNumber, standings[pouleNumber])\n      ))}\n    </div>\n  );\n};\n\nexport default LiveStandings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}