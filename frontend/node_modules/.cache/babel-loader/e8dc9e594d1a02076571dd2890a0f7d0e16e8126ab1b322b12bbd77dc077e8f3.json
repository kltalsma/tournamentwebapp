{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport apiClient from './apiClient';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [schedule, setSchedule] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [standings, setStandings] = useState([]);\n  const handleCreateTournament = async config => {\n    try {\n      const response = await apiClient.post('/api/tournament', config);\n      setMessage(`Tournament created successfully with ID: ${response.data.id}`);\n      setSchedule(generatePouleSchedule(config));\n      setMatches(generateMatchList(config.teamNames));\n      setStandings(generateInitialStandings(config.teamNames));\n    } catch (error) {\n      console.error('Error creating tournament:', error);\n      setMessage('Failed to create tournament. Please try again.');\n    }\n  };\n  const handleSaveResults = results => {\n    // Process results and update standings accordingly\n    const updatedStandings = calculateStandings(results);\n    setStandings(updatedStandings);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleCreateTournament\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"confirmation-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n      schedule: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n      matches: matches,\n      onSaveResults: handleSaveResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n      standings: standings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n// Updated generateMatchList function with initial scores\n_s(App, \"qP2d4GpS4+yCDeTLgaV7XlwuEGE=\");\n_c = App;\nconst generateMatchList = teamNames => {\n  // Initialize each match with team names and initial scores\n  return teamNames.map((team, index) => ({\n    teams: `${team} vs Team ${index + 1}`,\n    score1: 0,\n    // Placeholder score\n    score2: 0 // Placeholder score\n  }));\n};\n\n// Placeholder functions for generating schedule, standings, and calculating standings\nconst generatePouleSchedule = config => {\n  return [];\n};\nconst generateInitialStandings = teamNames => {\n  return teamNames.map(name => ({\n    name,\n    played: 0,\n    won: 0,\n    points: 0\n  }));\n};\nconst calculateStandings = results => {\n  return [];\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","apiClient","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","jsxDEV","_jsxDEV","App","_s","message","setMessage","schedule","setSchedule","matches","setMatches","standings","setStandings","handleCreateTournament","config","response","post","data","id","generatePouleSchedule","generateMatchList","teamNames","generateInitialStandings","error","console","handleSaveResults","results","updatedStandings","calculateStandings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onSaveResults","_c","map","team","index","teams","score1","score2","name","played","won","points","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport apiClient from './apiClient';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [schedule, setSchedule] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [standings, setStandings] = useState([]);\n\n  const handleCreateTournament = async (config) => {\n    try {\n      const response = await apiClient.post('/api/tournament', config);\n      setMessage(`Tournament created successfully with ID: ${response.data.id}`);\n      setSchedule(generatePouleSchedule(config));\n      setMatches(generateMatchList(config.teamNames));\n      setStandings(generateInitialStandings(config.teamNames));\n    } catch (error) {\n      console.error('Error creating tournament:', error);\n      setMessage('Failed to create tournament. Please try again.');\n    }\n  };\n\n  const handleSaveResults = (results) => {\n    // Process results and update standings accordingly\n    const updatedStandings = calculateStandings(results);\n    setStandings(updatedStandings);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Volleyball Tournament Configuration</h1>\n      <ConfigurationForm onSubmit={handleCreateTournament} />\n      {message && <p className=\"confirmation-message\">{message}</p>}\n      <PouleSchedule schedule={schedule} />\n      <MatchResults matches={matches} onSaveResults={handleSaveResults} />\n      <LiveStandings standings={standings} />\n    </div>\n  );\n}\n\n// Updated generateMatchList function with initial scores\nconst generateMatchList = (teamNames) => {\n  // Initialize each match with team names and initial scores\n  return teamNames.map((team, index) => ({\n    teams: `${team} vs Team ${index + 1}`,\n    score1: 0, // Placeholder score\n    score2: 0, // Placeholder score\n  }));\n};\n\n// Placeholder functions for generating schedule, standings, and calculating standings\nconst generatePouleSchedule = (config) => {\n  return [];\n};\n\nconst generateInitialStandings = (teamNames) => {\n  return teamNames.map((name) => ({ name, played: 0, won: 0, points: 0 }));\n};\n\nconst calculateStandings = (results) => {\n  return [];\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}