{"ast":null,"code":"var _jsxFileName = \"/app/src/components/LiveStandings.js\";\n// frontend/src/components/LiveStandings.js\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveStandings = ({\n  standings\n}) => {\n  // Helper function to calculate difference\n  const calculateDifference = (scored, against) => scored - against;\n\n  // Ensure standings is a valid object before using Object.keys\n  if (!standings || typeof standings !== 'object') {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No standings available. Please save results to update standings.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Tournament Standings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), Object.keys(standings).map(pouleNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Poule \", pouleNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"standings-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Played\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Won\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Scored\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Against\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Difference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(standings[pouleNumber]).sort((a, b) => {\n            // First by points\n            if (b.points !== a.points) return b.points - a.points;\n            // Then by goal difference\n            const diffA = calculateDifference(a.scored, a.against);\n            const diffB = calculateDifference(b.scored, b.against);\n            if (diffB !== diffA) return diffB - diffA;\n            // Finally by goals scored\n            return b.scored - a.scored;\n          }).map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.played\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.won\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.scored\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.against\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: calculateDifference(team.scored, team.against) > 0 ? 'positive' : calculateDifference(team.scored, team.against) < 0 ? 'negative' : '',\n              children: calculateDifference(team.scored, team.against)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)]\n          }, team.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, pouleNumber, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = LiveStandings;\nexport default LiveStandings;\nvar _c;\n$RefreshReg$(_c, \"LiveStandings\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LiveStandings","standings","calculateDifference","scored","against","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","pouleNumber","className","values","sort","a","b","points","diffA","diffB","team","name","played","won","_c","$RefreshReg$"],"sources":["/app/src/components/LiveStandings.js"],"sourcesContent":["// frontend/src/components/LiveStandings.js\n\nimport React from 'react';\n\nconst LiveStandings = ({ standings }) => {\n  // Helper function to calculate difference\n  const calculateDifference = (scored, against) => scored - against;\n\n  // Ensure standings is a valid object before using Object.keys\n  if (!standings || typeof standings !== 'object') {\n    return <p>No standings available. Please save results to update standings.</p>;\n  }\n\n  return (\n    <div>\n      <h2>Live Tournament Standings</h2>\n      {Object.keys(standings).map((pouleNumber) => (\n        <div key={pouleNumber}>\n          <h3>Poule {pouleNumber}</h3>\n          <table className=\"standings-table\">\n            <thead>\n              <tr>\n                <th>Team</th>\n                <th>Played</th>\n                <th>Won</th>\n                <th>Points</th>\n                <th>Scored</th>\n                <th>Against</th>\n                <th>Difference</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(standings[pouleNumber])\n                .sort((a, b) => {\n                  // First by points\n                  if (b.points !== a.points) return b.points - a.points;\n                  // Then by goal difference\n                  const diffA = calculateDifference(a.scored, a.against);\n                  const diffB = calculateDifference(b.scored, b.against);\n                  if (diffB !== diffA) return diffB - diffA;\n                  // Finally by goals scored\n                  return b.scored - a.scored;\n                })\n                .map((team) => (\n                  <tr key={team.name}>\n                    <td>{team.name}</td>\n                    <td>{team.played}</td>\n                    <td>{team.won}</td>\n                    <td>{team.points}</td>\n                    <td>{team.scored}</td>\n                    <td>{team.against}</td>\n                    <td\n                      className={\n                        calculateDifference(team.scored, team.against) > 0\n                          ? 'positive'\n                          : calculateDifference(team.scored, team.against) < 0\n                          ? 'negative'\n                          : ''\n                      }\n                    >\n                      {calculateDifference(team.scored, team.against)}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LiveStandings;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}