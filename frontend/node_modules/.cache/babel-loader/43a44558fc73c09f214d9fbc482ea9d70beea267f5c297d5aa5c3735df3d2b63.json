{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport KnockoutRounds from './components/KnockoutRounds';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState({});\n  const [knockoutStage, setKnockoutStage] = useState(false);\n  const [knockoutTeams, setKnockoutTeams] = useState([]);\n  const handleConfigSubmit = newConfig => {\n    setConfig(newConfig);\n    setKnockoutStage(false);\n    setSchedule([]);\n    setResults([]);\n    setStandings({});\n  };\n  const generatePouleSchedule = () => {\n    const {\n      teamNames,\n      numPoules,\n      numCourts,\n      matchTime,\n      startTime\n    } = config;\n    const poules = Array.from({\n      length: numPoules\n    }, () => []);\n\n    // Distribute teams into poules\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    // Helper function to add minutes to time\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n\n    // Generate schedule with referees and courts\n    let currentTime = startTime;\n    const generatedSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          const nonPlayingTeams = teamNames.filter(team => team !== poule[i] && team !== poule[j]);\n          const referee = nonPlayingTeams[generatedSchedule.length % nonPlayingTeams.length];\n          generatedSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: generatedSchedule.length % numCourts + 1,\n            referee,\n            score1: 0,\n            score2: 0\n          });\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(generatedSchedule);\n  };\n  const handleSaveResults = newResults => {\n    if (!Array.isArray(newResults)) {\n      console.error(\"Expected newResults to be an array, but got:\", typeof newResults);\n      return;\n    }\n    const completeResults = newResults.filter(result => result.teams && result.score1 !== undefined && result.score2 !== undefined);\n    if (completeResults.length > 0) {\n      updateStandings(completeResults);\n      setResults(completeResults);\n    } else {\n      console.warn(\"No complete match results to save.\");\n    }\n  };\n  const updateStandings = newResults => {\n    // Initialize a fresh standings object\n    const updatedStandings = {};\n\n    // First pass: Initialize poule structures and teams\n    newResults.forEach(result => {\n      const {\n        poule\n      } = result;\n      if (!updatedStandings[poule]) {\n        updatedStandings[poule] = {};\n      }\n    });\n\n    // Second pass: Process all match results\n    newResults.forEach(result => {\n      const {\n        teams,\n        score1,\n        score2,\n        poule\n      } = result;\n\n      // Validate the result data\n      if (!teams || typeof teams !== \"string\") {\n        console.warn(\"Invalid teams data in result:\", result);\n        return;\n      }\n\n      // Parse scores as integers with validation\n      const team1Score = parseInt(score1, 10);\n      const team2Score = parseInt(score2, 10);\n      if (isNaN(team1Score) || isNaN(team2Score)) {\n        console.warn(\"Invalid score data in result:\", result);\n        return;\n      }\n      const [team1, team2] = teams.split(' vs ');\n\n      // Initialize team statistics if they don't exist\n      [team1, team2].forEach(team => {\n        if (!updatedStandings[poule][team]) {\n          updatedStandings[poule][team] = {\n            name: team,\n            played: 0,\n            won: 0,\n            points: 0,\n            scored: 0,\n            against: 0,\n            poule: poule\n          };\n        }\n      });\n\n      // Update match statistics\n      const team1Stats = updatedStandings[poule][team1];\n      const team2Stats = updatedStandings[poule][team2];\n\n      // Update games played\n      team1Stats.played += 1;\n      team2Stats.played += 1;\n\n      // Update scores\n      team1Stats.scored += team1Score;\n      team1Stats.against += team2Score;\n      team2Stats.scored += team2Score;\n      team2Stats.against += team1Score;\n\n      // Update wins and points\n      if (team1Score > team2Score) {\n        team1Stats.won += 1;\n        team1Stats.points += 3;\n      } else if (team2Score > team1Score) {\n        team2Stats.won += 1;\n        team2Stats.points += 3;\n      } else {\n        team1Stats.points += 1;\n        team2Stats.points += 1;\n      }\n    });\n\n    // Sort teams within each poule by points and goal difference\n    Object.keys(updatedStandings).forEach(poule => {\n      const pouleTeams = Object.values(updatedStandings[poule]);\n      const sortedTeams = pouleTeams.sort((a, b) => {\n        // First sort by points\n        if (b.points !== a.points) {\n          return b.points - a.points;\n        }\n        // Then by goal difference\n        const goalDiffA = a.scored - a.against;\n        const goalDiffB = b.scored - b.against;\n        if (goalDiffB !== goalDiffA) {\n          return goalDiffB - goalDiffA;\n        }\n        // Finally by goals scored\n        return b.scored - a.scored;\n      });\n      updatedStandings[poule] = sortedTeams.reduce((acc, team) => {\n        acc[team.name] = team;\n        return acc;\n      }, {});\n    });\n    setStandings(updatedStandings);\n    console.log(\"Updated standings:\", updatedStandings);\n  };\n  const determineKnockoutTeams = () => {\n    const knockoutCandidates = [];\n    Object.keys(standings).forEach(poule => {\n      const sortedTeams = Object.values(standings[poule]).sort((a, b) => b.points - a.points || b.scored - b.against - (a.scored - a.against));\n      const topTeams = sortedTeams.slice(0, 4);\n      knockoutCandidates.push(...topTeams);\n    });\n    if (knockoutCandidates.length > 0) {\n      setKnockoutTeams(knockoutCandidates);\n      setKnockoutStage(true);\n    } else {\n      console.warn(\"Not enough teams to proceed with knockout rounds.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), !config ? /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleConfigSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePouleSchedule,\n        children: \"Generate Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PouleSchedule, {\n        schedule: schedule\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n        matches: schedule,\n        onSaveResults: handleSaveResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n        standings: standings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: determineKnockoutTeams,\n        children: \"Save Results & Start Knockout Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), knockoutStage && /*#__PURE__*/_jsxDEV(KnockoutRounds, {\n        teams: knockoutTeams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0SQEgTpAgJrdn24ozBPiAeZGJPg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","KnockoutRounds","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","config","setConfig","schedule","setSchedule","results","setResults","standings","setStandings","knockoutStage","setKnockoutStage","knockoutTeams","setKnockoutTeams","handleConfigSubmit","newConfig","generatePouleSchedule","teamNames","numPoules","numCourts","matchTime","startTime","poules","Array","from","length","forEach","team","index","pouleIndex","push","addMinutes","time","minutes","hour","min","split","map","Number","newMinutes","newHour","Math","floor","newMin","String","padStart","currentTime","generatedSchedule","poule","i","j","nonPlayingTeams","filter","referee","teams","court","score1","score2","handleSaveResults","newResults","isArray","console","error","completeResults","result","undefined","updateStandings","warn","updatedStandings","team1Score","parseInt","team2Score","isNaN","team1","team2","name","played","won","points","scored","against","team1Stats","team2Stats","Object","keys","pouleTeams","values","sortedTeams","sort","a","b","goalDiffA","goalDiffB","reduce","acc","log","determineKnockoutTeams","knockoutCandidates","topTeams","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","matches","onSaveResults","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport KnockoutRounds from './components/KnockoutRounds';\nimport './styles/index.css';\n\nconst App = () => {\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState({});\n  const [knockoutStage, setKnockoutStage] = useState(false);\n  const [knockoutTeams, setKnockoutTeams] = useState([]);\n\n  const handleConfigSubmit = (newConfig) => {\n    setConfig(newConfig);\n    setKnockoutStage(false);\n    setSchedule([]);\n    setResults([]);\n    setStandings({});\n  };\n\n  const generatePouleSchedule = () => {\n    const { teamNames, numPoules, numCourts, matchTime, startTime } = config;\n    const poules = Array.from({ length: numPoules }, () => []);\n\n    // Distribute teams into poules\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    // Helper function to add minutes to time\n    const addMinutes = (time, minutes) => {\n      const [hour, min] = time.split(':').map(Number);\n      const newMinutes = hour * 60 + min + minutes;\n      const newHour = Math.floor(newMinutes / 60) % 24;\n      const newMin = newMinutes % 60;\n      return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n    };\n\n    // Generate schedule with referees and courts\n    let currentTime = startTime;\n    const generatedSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          const nonPlayingTeams = teamNames.filter(\n            (team) => team !== poule[i] && team !== poule[j]\n          );\n          const referee = nonPlayingTeams[(generatedSchedule.length) % nonPlayingTeams.length];\n\n          generatedSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            poule: pouleIndex + 1,\n            court: (generatedSchedule.length % numCourts) + 1,\n            referee,\n            score1: 0,\n            score2: 0,\n          });\n\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(generatedSchedule);\n  };\n\n  const handleSaveResults = (newResults) => {\n    if (!Array.isArray(newResults)) {\n      console.error(\"Expected newResults to be an array, but got:\", typeof newResults);\n      return;\n    }\n\n    const completeResults = newResults.filter(\n      (result) => result.teams && result.score1 !== undefined && result.score2 !== undefined\n    );\n\n    if (completeResults.length > 0) {\n      updateStandings(completeResults);\n      setResults(completeResults);\n    } else {\n      console.warn(\"No complete match results to save.\");\n    }\n  };\n\nconst updateStandings = (newResults) => {\n  // Initialize a fresh standings object\n  const updatedStandings = {};\n  \n  // First pass: Initialize poule structures and teams\n  newResults.forEach((result) => {\n    const { poule } = result;\n    if (!updatedStandings[poule]) {\n      updatedStandings[poule] = {};\n    }\n  });\n\n  // Second pass: Process all match results\n  newResults.forEach((result) => {\n    const { teams, score1, score2, poule } = result;\n    \n    // Validate the result data\n    if (!teams || typeof teams !== \"string\") {\n      console.warn(\"Invalid teams data in result:\", result);\n      return;\n    }\n\n    // Parse scores as integers with validation\n    const team1Score = parseInt(score1, 10);\n    const team2Score = parseInt(score2, 10);\n    \n    if (isNaN(team1Score) || isNaN(team2Score)) {\n      console.warn(\"Invalid score data in result:\", result);\n      return;\n    }\n\n    const [team1, team2] = teams.split(' vs ');\n\n    // Initialize team statistics if they don't exist\n    [team1, team2].forEach(team => {\n      if (!updatedStandings[poule][team]) {\n        updatedStandings[poule][team] = {\n          name: team,\n          played: 0,\n          won: 0,\n          points: 0,\n          scored: 0,\n          against: 0,\n          poule: poule\n        };\n      }\n    });\n\n    // Update match statistics\n    const team1Stats = updatedStandings[poule][team1];\n    const team2Stats = updatedStandings[poule][team2];\n\n    // Update games played\n    team1Stats.played += 1;\n    team2Stats.played += 1;\n\n    // Update scores\n    team1Stats.scored += team1Score;\n    team1Stats.against += team2Score;\n    team2Stats.scored += team2Score;\n    team2Stats.against += team1Score;\n\n    // Update wins and points\n    if (team1Score > team2Score) {\n      team1Stats.won += 1;\n      team1Stats.points += 3;\n    } else if (team2Score > team1Score) {\n      team2Stats.won += 1;\n      team2Stats.points += 3;\n    } else {\n      team1Stats.points += 1;\n      team2Stats.points += 1;\n    }\n  });\n\n  // Sort teams within each poule by points and goal difference\n  Object.keys(updatedStandings).forEach(poule => {\n    const pouleTeams = Object.values(updatedStandings[poule]);\n    const sortedTeams = pouleTeams.sort((a, b) => {\n      // First sort by points\n      if (b.points !== a.points) {\n        return b.points - a.points;\n      }\n      // Then by goal difference\n      const goalDiffA = a.scored - a.against;\n      const goalDiffB = b.scored - b.against;\n      if (goalDiffB !== goalDiffA) {\n        return goalDiffB - goalDiffA;\n      }\n      // Finally by goals scored\n      return b.scored - a.scored;\n    });\n    \n    updatedStandings[poule] = sortedTeams.reduce((acc, team) => {\n      acc[team.name] = team;\n      return acc;\n    }, {});\n  });\n\n  setStandings(updatedStandings);\n  console.log(\"Updated standings:\", updatedStandings);\n};\n\n  const determineKnockoutTeams = () => {\n    const knockoutCandidates = [];\n\n    Object.keys(standings).forEach(poule => {\n      const sortedTeams = Object.values(standings[poule])\n        .sort((a, b) => b.points - a.points || (b.scored - b.against) - (a.scored - a.against));\n\n      const topTeams = sortedTeams.slice(0, 4);\n      knockoutCandidates.push(...topTeams);\n    });\n\n    if (knockoutCandidates.length > 0) {\n      setKnockoutTeams(knockoutCandidates);\n      setKnockoutStage(true);\n    } else {\n      console.warn(\"Not enough teams to proceed with knockout rounds.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Volleyball Tournament Configuration</h1>\n      {!config ? (\n        <ConfigurationForm onSubmit={handleConfigSubmit} />\n      ) : (\n        <>\n          <button onClick={generatePouleSchedule}>Generate Schedule</button>\n          <PouleSchedule schedule={schedule} />\n          <MatchResults matches={schedule} onSaveResults={handleSaveResults} />\n          <LiveStandings standings={standings} />\n          <button onClick={determineKnockoutTeams}>Save Results & Start Knockout Rounds</button>\n          {knockoutStage && <KnockoutRounds teams={knockoutTeams} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}