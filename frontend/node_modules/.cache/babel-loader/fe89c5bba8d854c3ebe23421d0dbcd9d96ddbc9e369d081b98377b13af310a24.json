{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState([]);\n  const addMinutes = (time, minutes) => {\n    const [hour, min] = time.split(':').map(Number);\n    const newMinutes = hour * 60 + min + minutes;\n    const newHour = Math.floor(newMinutes / 60) % 24;\n    const newMin = newMinutes % 60;\n    return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n  };\n  const handleConfigSubmit = newConfig => {\n    setConfig(newConfig);\n    generatePouleSchedule(newConfig);\n  };\n  const generatePouleSchedule = config => {\n    const {\n      numPoules,\n      teamNames,\n      startTime,\n      matchTime,\n      numCourts\n    } = config;\n    const poules = Array.from({\n      length: numPoules\n    }, () => []);\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n    let currentTime = startTime;\n    const newSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          newSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            court: newSchedule.length % numCourts + 1,\n            referee: poule[(j + 1) % poule.length],\n            poule: pouleIndex + 1\n          });\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(newSchedule);\n  };\n  const handleSaveResults = updatedResults => {\n    setResults(updatedResults);\n    updateStandings(updatedResults);\n  };\n  const calculateStandings = results => {\n    const standings = {};\n    results.forEach(({\n      teams,\n      score1,\n      score2,\n      poule\n    }) => {\n      const [team1, team2] = teams.split(' vs ');\n\n      // Ensure standings for the poule and teams are initialized\n      if (!standings[poule]) standings[poule] = {};\n      if (!standings[poule][team1]) standings[poule][team1] = {\n        name: team1,\n        played: 0,\n        won: 0,\n        points: 0,\n        scored: 0,\n        against: 0\n      };\n      if (!standings[poule][team2]) standings[poule][team2] = {\n        name: team2,\n        played: 0,\n        won: 0,\n        points: 0,\n        scored: 0,\n        against: 0\n      };\n\n      // Update match data\n      standings[poule][team1].played += 1;\n      standings[poule][team2].played += 1;\n      standings[poule][team1].scored += parseInt(score1, 10);\n      standings[poule][team1].against += parseInt(score2, 10);\n      standings[poule][team2].scored += parseInt(score2, 10);\n      standings[poule][team2].against += parseInt(score1, 10);\n      if (score1 > score2) {\n        standings[poule][team1].won += 1;\n        standings[poule][team1].points += 3;\n      } else if (score2 > score1) {\n        standings[poule][team2].won += 1;\n        standings[poule][team2].points += 3;\n      } else {\n        standings[poule][team1].points += 1;\n        standings[poule][team2].points += 1;\n      }\n    });\n\n    // Convert standings by poule into an array and sort teams within each poule\n    Object.keys(standings).forEach(poule => {\n      standings[poule] = Object.values(standings[poule]).sort((a, b) => b.points - a.points || b.scored - a.scored || a.against - b.against);\n    });\n    return standings;\n  };\n  const updateStandings = results => {\n    const updatedStandings = calculateStandings(results);\n    setStandings(updatedStandings);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Volleyball Tournament Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), !config ? /*#__PURE__*/_jsxDEV(ConfigurationForm, {\n      onSubmit: handleConfigSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PouleSchedule, {\n        schedule: schedule\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchResults, {\n        schedule: schedule,\n        onSaveResults: handleSaveResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveStandings, {\n        standings: standings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kCBT8J5ydxUZekkzx60zNPockak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConfigurationForm","PouleSchedule","MatchResults","LiveStandings","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","config","setConfig","schedule","setSchedule","results","setResults","standings","setStandings","addMinutes","time","minutes","hour","min","split","map","Number","newMinutes","newHour","Math","floor","newMin","String","padStart","handleConfigSubmit","newConfig","generatePouleSchedule","numPoules","teamNames","startTime","matchTime","numCourts","poules","Array","from","length","forEach","team","index","pouleIndex","push","currentTime","newSchedule","poule","i","j","teams","court","referee","handleSaveResults","updatedResults","updateStandings","calculateStandings","score1","score2","team1","team2","name","played","won","points","scored","against","parseInt","Object","keys","values","sort","a","b","updatedStandings","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onSaveResults","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport ConfigurationForm from './components/ConfigurationForm';\nimport PouleSchedule from './components/PouleSchedule';\nimport MatchResults from './components/MatchResults';\nimport LiveStandings from './components/LiveStandings';\nimport './styles/index.css';\n\nconst App = () => {\n  const [config, setConfig] = useState(null);\n  const [schedule, setSchedule] = useState([]);\n  const [results, setResults] = useState([]);\n  const [standings, setStandings] = useState([]);\n\n  const addMinutes = (time, minutes) => {\n    const [hour, min] = time.split(':').map(Number);\n    const newMinutes = hour * 60 + min + minutes;\n    const newHour = Math.floor(newMinutes / 60) % 24;\n    const newMin = newMinutes % 60;\n    return `${String(newHour).padStart(2, '0')}:${String(newMin).padStart(2, '0')}`;\n  };\n\n  const handleConfigSubmit = (newConfig) => {\n    setConfig(newConfig);\n    generatePouleSchedule(newConfig);\n  };\n\n  const generatePouleSchedule = (config) => {\n    const { numPoules, teamNames, startTime, matchTime, numCourts } = config;\n    const poules = Array.from({ length: numPoules }, () => []);\n\n    teamNames.forEach((team, index) => {\n      const pouleIndex = index % numPoules;\n      poules[pouleIndex].push(team);\n    });\n\n    let currentTime = startTime;\n    const newSchedule = [];\n    poules.forEach((poule, pouleIndex) => {\n      for (let i = 0; i < poule.length - 1; i++) {\n        for (let j = i + 1; j < poule.length; j++) {\n          newSchedule.push({\n            time: currentTime,\n            teams: `${poule[i]} vs ${poule[j]}`,\n            court: (newSchedule.length % numCourts) + 1,\n            referee: poule[(j + 1) % poule.length],\n            poule: pouleIndex + 1\n          });\n          currentTime = addMinutes(currentTime, matchTime);\n        }\n      }\n    });\n    setSchedule(newSchedule);\n  };\n\n  const handleSaveResults = (updatedResults) => {\n    setResults(updatedResults);\n    updateStandings(updatedResults);\n  };\n\nconst calculateStandings = (results) => {\n  const standings = {};\n\n  results.forEach(({ teams, score1, score2, poule }) => {\n    const [team1, team2] = teams.split(' vs ');\n\n    // Ensure standings for the poule and teams are initialized\n    if (!standings[poule]) standings[poule] = {};\n    if (!standings[poule][team1]) standings[poule][team1] = { name: team1, played: 0, won: 0, points: 0, scored: 0, against: 0 };\n    if (!standings[poule][team2]) standings[poule][team2] = { name: team2, played: 0, won: 0, points: 0, scored: 0, against: 0 };\n\n    // Update match data\n    standings[poule][team1].played += 1;\n    standings[poule][team2].played += 1;\n    standings[poule][team1].scored += parseInt(score1, 10);\n    standings[poule][team1].against += parseInt(score2, 10);\n    standings[poule][team2].scored += parseInt(score2, 10);\n    standings[poule][team2].against += parseInt(score1, 10);\n\n    if (score1 > score2) {\n      standings[poule][team1].won += 1;\n      standings[poule][team1].points += 3;\n    } else if (score2 > score1) {\n      standings[poule][team2].won += 1;\n      standings[poule][team2].points += 3;\n    } else {\n      standings[poule][team1].points += 1;\n      standings[poule][team2].points += 1;\n    }\n  });\n\n  // Convert standings by poule into an array and sort teams within each poule\n  Object.keys(standings).forEach(poule => {\n    standings[poule] = Object.values(standings[poule])\n      .sort((a, b) => b.points - a.points || b.scored - a.scored || a.against - b.against);\n  });\n\n  return standings;\n};\n\nconst updateStandings = (results) => {\n  const updatedStandings = calculateStandings(results);\n  setStandings(updatedStandings);\n};\n\n  return (\n    <div>\n      <h1>Volleyball Tournament Configuration</h1>\n      {!config ? (\n        <ConfigurationForm onSubmit={handleConfigSubmit} />\n      ) : (\n        <>\n          <PouleSchedule schedule={schedule} />\n          <MatchResults schedule={schedule} onSaveResults={handleSaveResults} />\n          <LiveStandings standings={standings} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}